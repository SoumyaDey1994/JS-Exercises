'use strict';
var React = require('react');
var Joi = require('joi');
var JoiValidationStrategy = require('joi-validation-strategy');
var ReactValidationMixin = require('react-validation-mixin');

class Demo extends React.Component {
    constructor(props){
        super(props)
        this.state = {
            userName: undefined,
            password: undefined
        }
        this.validatorTypes = {
            userName: Joi.string().required().label('User Name'),
            password: Joi.string().required().regex(/[a-zA-Z0-9]{3,30}/).label('Password')
        }
    }


    getValidatorData(){
        return (this.state);
               
    }
    onSubmit(e){
        e.preventDefault();
        var onValidate = function(error){
            console.log('Error-->'+JSON.stringify(error));
            if(error){
                if(error.userName){
                    alert(error.userName);
                }
                if(error.password){
                    alert(error.password);
                }
            }else{
                alert('no error');
            }
        }
        this.props.validate(onValidate);
    }
    renderHelpText(message){
        return(
            <span>{message}</span>
        );
    }
    onChange(field){
        var _this = this; //_ means private
        return function(e){
            var state = {};
            state[field] = e.target.value;
            _this.setState(state);
        };
    }
    
    render(){
        return(
            <form onSubmit={(e)=>this.onSubmit(e)}>
                <input type="text" ref="userName" placeholder="Enter user name" value={this.state.userName} onBlur={this.props.handleValidation('userName')}/>
                {this.renderHelpText(
                    this.props.getValidationMessages('userName'))}
                <input type="text" ref="password" placeholder="Enter password" value={this.state.password} onBlur={this.props.handleValidation('password')}/>
                {this.renderHelpText(
                    this.props.getValidationMessages('password'))}
                <button type='submit'>SUBMIT</button>
            </form>
        )
    }

}
var ValidationDemo = ReactValidationMixin(JoiValidationStrategy)(Demo)
export default ValidationDemo;
